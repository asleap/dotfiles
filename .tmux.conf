# Requirements: tpm
# `$ git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm`

######################
### BASIC SETTINGS ###
######################

set-option -sg escape-time 10
# set-option -g default-terminal "screen-256color"
# set-option -g default-terminal "tmux-256color"
# set-option -g default-terminal "screen"
set-option -g default-terminal "xterm-256color"

# Enable mouse mode (tmux 2.1 and above)
set-option -g mouse on

# Don't rename windows automatically
set-option -g allow-rename off

# Start windows numbering at 1
set-option -g base-index 1

# Make pane numbering consistent with windows
set-window-option -g pane-base-index 1

# Rename window to reflect current program
set-window-option -g automatic-rename on

# Renumber windows when a window is closed
set-option -g renumber-windows on

# Set terminal title
set-option -g set-titles on
set-option -g set-titles-string '#W@#h [#S-#I]'

# Pane indicators display time
set-option -g display-panes-time 800

# Status messages display time
set-option -g display-time 1000


######################
### DESIGN CHANGES ###
######################

# Panes
set -g pane-border-fg black
set -g pane-active-border-fg brightred

## Status bar design
# Status line
set -g status-justify left
set -g status-bg default
set -g status-fg colour12
set -g status-interval 2

# Messaging
set -g message-fg black
set -g message-bg yellow
set -g message-command-fg blue
set -g message-command-bg black

# Window mode
setw -g mode-bg colour6
setw -g mode-fg colour0

# Window status
setw -g window-status-format " #F#I:#W#F "
setw -g window-status-current-format " #F#I:#W#F "
setw -g window-status-format "#[fg=magenta]#[bg=black] #I #[bg=cyan]#[fg=colour8] #W "
setw -g window-status-current-format "#[bg=brightmagenta]#[fg=colour8] #I #[fg=colour8]#[bg=colour14] #W "
setw -g window-status-current-bg colour0
setw -g window-status-current-fg colour11
setw -g window-status-current-attr dim
setw -g window-status-bg green
setw -g window-status-fg black
setw -g window-status-attr reverse

# Loud or quiet?
set-option -g visual-activity off
set-option -g visual-bell off
set-option -g visual-silence off
set-window-option -g monitor-activity off
set-option -g bell-action none

# The modes
setw -g clock-mode-colour colour135
setw -g mode-attr bold
setw -g mode-fg colour196
setw -g mode-bg colour238

# The panes
set -g pane-border-bg colour235
set -g pane-border-fg colour238
set -g pane-active-border-bg colour236
set -g pane-active-border-fg colour51

# The statusbar
set -g status-position bottom
set -g status-bg colour234
set -g status-fg colour137
set -g status-attr dim
set -g status-left ''
# set -g status-left-length 20
set -g status-right ''
# set -g status-right '#[fg=colour233,bg=colour241,bold] %d/%m #[fg=colour233,bg=colour245,bold] %H:%M:%S '
# set -g status-right-length 50

setw -g window-status-current-fg colour81
setw -g window-status-current-bg colour238
setw -g window-status-current-attr bold
setw -g window-status-current-format ' #I#[fg=colour250]:#[fg=colour255]#W#[fg=colour50]#F '

setw -g window-status-fg colour138
setw -g window-status-bg colour235
setw -g window-status-attr none
setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '

setw -g window-status-bell-attr bold
setw -g window-status-bell-fg colour255
setw -g window-status-bell-bg colour1

# The messages
set -g message-attr bold
set -g message-fg colour232
set -g message-bg colour166


######################
###    MAPPINGS    ###
######################

# Remap prefix from 'C-b' to 'M-a'
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# Split panes using | and -
unbind %
unbind '"'
bind \ split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# Switch panes using vim keys
bind h select-pane -L
bind l select-pane -R
bind k select-pane -U
bind j select-pane -D

# Clear screen
bind -n C-b send-keys -R \; send-keys C-l \; clear-history

# Use vim bindings
setw -g mode-keys vi
# unbind-key [
bind-key Escape copy-mode
unbind-key p
bind-key p paste-buffer
bind-key -Tcopy-mode-vi v send -X begin-selection
if-shell 'case "`uname`" in *Linux*) true;; *) false;; esac' \
    'bind-key -Tcopy-mode-vi Enter send -X copy-pipe-and-cancel "xclip -selection primary -i -f | xclip -selection clipboard -i"' \
    'bind-key -Tcopy-mode-vi Enter send -X copy-pipe-and-cancel  "reattach-to-user-namespace pbcopy"'
if-shell 'case "`uname`" in *Linux*) true;; *) false;; esac' \
    'bind-key -Tcopy-mode-vi y send -X copy-pipe-and-cancel "xclip -selection primary -i -f | xclip -selection clipboard -i"' \
    'bind-key -Tcopy-mode-vi y send -X copy-pipe-and-cancel  "reattach-to-user-namespace pbcopy"'

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l


######################
###    PLUGINS     ###
######################

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
# set -g @plugin 'christoomey/vim-tmux-navigator'

# Initialize TMUX plugin manager
run '~/.tmux/plugins/tpm/tpm'
